name: Release

on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write

jobs:
  update_version:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@buungroup.com"

      - name: Get latest tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0)
          echo "::set-output name=latest_tag::$latest_tag"

      - name: Update version in version.go
        run: |
          latest_tag="${{ steps.get_latest_tag.outputs.latest_tag }}"
          sed -i "s/const version = .*/const version = \"$latest_tag\"/" cmd/version.go

      - name: Commit and push version update
        run: |
          git add cmd/version.go
          git commit -m "Update version to $latest_tag for the release workflow"
          git push

  build:
    needs: update_version
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Set up Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Build
        run: go build -o vaultify

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@111c56156bcc6918c056dbef52164cfa583dc549
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Sign binary
        run: gpg --armor --detach-sign -o vaultify.sig vaultify
        env:
          GPG_TTY: /dev/tty

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            vaultify
            vaultify.sig
          body: Release notes here
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SIGNATURE_KEY: ${{ secrets.GPG_PASSPHRASE }}
